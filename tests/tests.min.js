module("Calc Configs");test("noConflict()",function(){var e="noConflict";window.CalcAlias=window.Calc;Calc={foo:"bar"};var t=CalcAlias[e]();strictEqual(Calc.foo,"bar","Restores.");ok(t[e],"Creates aliases.");Calc=CalcAlias[e]()});(function(){var e="rounded",t="Rounds up.",n="Rounds up from middle.",r="Rounds down.",i="nearest",s="toZero";module("Number Module");test("rounded()",function(){strictEqual(Calc[e](1.6),2,t);strictEqual(Calc[e](1.5),2,n);strictEqual(Calc[e](1.4),1,r)});test("nearest()",function(){strictEqual(Calc[i](23,5),25,t);strictEqual(Calc[i](22.5,5),25,n);strictEqual(Calc[i](22,5),20,r)});test("mod()",function(){strictEqual(Calc.mod(5,4),1,"Mods positive.");strictEqual(Calc.mod(-5,4),3,"Mods negative.")});test("chopped()",function(){strictEqual(Calc.chopped(1.1),1,"Chops positive.");strictEqual(Calc.chopped(-1.1),-1,"Chops negative.")});test("sign()",function(){strictEqual(Calc.sign(1),1,"Positive sign.");strictEqual(Calc.sign(0),0,"Zero sign.");strictEqual(Calc.sign(-1),-1,"Negative sign.")});test("toZero()",function(){strictEqual(Calc[s](21,20),1,"Zeroes down.");strictEqual(Calc[s](-21,20),-1,"Zeroes up.");strictEqual(Calc[s](-21,21),0,"Zeroes to zero.");strictEqual(Calc[s](-21,22),1,"Zeroes up past zero.")});test("correct()",function(){strictEqual(Calc.correct(3),3,"Corrects.")});module("Exponent Module");test("root()",function(){strictEqual(Calc.root(1,1),1,"1^1");strictEqual(Calc.root(1,2),1,"1^(1/2)");strictEqual(Calc.root(25,2),5,"25^(1/2)");strictEqual(Calc.root(125,3),5,"125^(1/2)")})})();