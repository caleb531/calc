(function(self,Math,parseFloat,parseInt,String,TRUE,FALSE,NULL,UNDEFINED){var Calc={},_Calc=self.Calc,abs=Math.abs,round=Math.round,floor=Math.floor,ceil=Math.ceil,pow=Math.pow,sqrt=Math.sqrt,exp=Math.exp,log=Math.log,random=Math.random,PI=Math.PI,E=Math.E,matrix,vector;self.Calc=Calc;Calc.PI=PI;Calc.E=E;Calc.PHI=(1+sqrt(5))/2;Calc.G=6.673848e-11;Calc.noConflict=function(){if(self.Calc===Calc){self.Calc=_Calc}return Calc};Calc.abs=abs;Calc.ceil=ceil;Calc.floor=floor;Calc.rounded=Calc.round=function(num,places){return places?parseFloat(num.toFixed(places)):round(num)};Calc.nearest=function(num,n){return n===0?0:round(num/n)*n};Calc.mod=function(num,n){return(num%n+n)%n};Calc.chopped=Calc.chop=function(num){return num>=0?floor(num):ceil(num)};Calc.sign=function(num){var sign;if(num>0){sign=1}else if(num<0){sign=-1}else{sign=0}return sign};Calc.toZero=function(num,inc){return num-Calc.sign(num)*inc};Calc.correct=function(num){var str=String(num),parts=str.split(".");if(parts[0].match("e")===NULL&&parts[1]){parts[1]=parts[1].replace(/(\d)(\1{10})(\d{1,2})$/,"$1$2$2");num=parseFloat(parts.join("."))}return num};Calc.pow=pow;Calc.root=function(base,root){return pow(base,1/root)};Calc.sqrt=sqrt;Calc.log=function(num,base){if(base===UNDEFINED){base=10}return log(num)/log(base)};Calc.ln=log;Calc.exp=exp;Calc.min=function(arr){return Math.min.apply(Math,arr)};Calc.max=function(arr){return Math.max.apply(Math,arr)};Calc.range=function(arr){return Calc.max(arr)-Calc.min(arr)};Calc.thru=function(start,end,step){var arr=[],i;if(end===UNDEFINED){end=start;start=0}if(!step){step=1}if(start>end){step=-1}for(i=start;i!==end;i+=step){arr.push(i)}return arr};Calc.sum=function(arr){var sum=0,i,length;for(i=0,len=arr.length;i<len;i+=1){sum+=arr[i]}return sum};Calc.summation=Calc.sigma=function(a,b,fn){var sum=0,i;if(fn!==UNDEFINED){for(i=a;i<=b;i+=1){sum+=fn(i)}}else{sum=(b-a+1)*(a+b)/2}return sum};Calc.riemann=function(fn,a,b){var sum=0,n=1e5,dx=(b-a)/n,i;for(i=1;i<n;i+=1){sum+=fn(a+dx*i)*dx}return sum};Calc.product=Calc.prod=function(arr){var prod=1,i,len;for(i=0,len=arr.length;i<len;i+=1){prod*=arr[i]}return prod};Calc.mean=Calc.avg=function(arr){return Calc.sum(arr)/arr.length};Calc.geoMean=function(arr){return pow(Calc.product(arr),1/arr.length)};Calc.median=function(arr){var med,m1,m2,len;arr=Calc.sort(arr);len=arr.length;if(len%2===0){m1=arr[len/2-1];m2=arr[len/2];med=Calc.mean([m1,m2])}else{med=arr[floor(len/2)]}return med};Calc.modes=Calc.mode=function(arr){var map=[],modes=[],maxCount=1,num,i,len;for(i=0,len=arr.length;i<len;i+=1){num=arr[i];if(map[num]===UNDEFINED){map[num]=1}else{map[num]+=1}if(map[num]>maxCount){modes=[num];maxCount=map[num]}else if(map[num]===maxCount){modes.unshift(num)}}if(modes.length===len){modes=[]}return modes};Calc.variance=function(arr,pop){var n=len=arr.length,mean=Calc.mean(arr),top=0,bottom=n-1,i;for(i=0;i<len;i+=1){top+=pow(arr[i]-mean,2)}if(pop){bottom=n}return top/bottom};Calc.stdDev=function(arr,pop){return sqrt(Calc.variance(arr,pop))};Calc.slope=function(pt1,pt2){var slope=(pt2[1]-pt1[1])/(pt2[0]-pt1[0]);if(slope===Infinity){slope=NULL}return slope};Calc.distance=Calc.dist=function(pt1,pt2){pt1=pt1.slice(0);pt2=pt2.slice(0);pt1[2]=pt1[2]||0;pt2[2]=pt2[2]||0;return sqrt(pow(pt2[0]-pt1[0],2)+pow(pt2[1]-pt1[1],2)+pow(pt2[2]-pt1[2],2))};Calc.midpoint=Calc.midpt=function(pt1,pt2){pt1=pt1.slice(0);pt2=pt2.slice(0);pt1[2]=pt1[2]||0;pt2[2]=pt2[2]||0;return[(pt1[0]+pt2[0])/2,(pt1[1]+pt2[1])/2,(pt1[2]+pt2[2])/2]};Calc.hypot=function(a,b){return sqrt(pow(a,2)+pow(b,2))};Calc.sqDiff=function(a,b){return pow(a,2)-pow(b,2)};Calc.sorted=Calc.sort=function(arr,fn){arr=arr.slice(0);if(fn&&fn.call){arr.sort(function(a,b){return fn(a)>fn(b)})}else{arr.sort(function(a,b){return a>b})}return arr};Calc.filtered=Calc.filter=function(arr,fn){var filtered,i,len;if(arr.filter){filtered=arr.filter(fn)}else{filtered=[];for(i=0,len=arr.length;i<len;i+=1){if(fn.call(arr,arr[i],i,arr)){filtered.push(arr[i])}}}return filtered};Calc.map=function(arr,fn){var mapped,i,len;if(arr.map){mapped=arr.map(fn)}else{mapped=[];for(i=0,len=arr.length;i<len;i+=1){mapped.push(fn.call(arr,arr[i],i,arr))}}return mapped};Calc.index=function(arr,item,fromIndex){var index,i,length;if(arr.indexOf){index=arr.indexOf(item,fromIndex)}else{index=-1;i=fromIndex||0;for(len=arr.length;i<len;i+=1){if(arr[i]===item){index=i;break}}}return index};Calc.unique=function(arr){return Calc.filtered(arr,function(value,key){return Calc.index(arr,value)===key})};Calc.reversed=Calc.reverse=function(arr){if(arr.split){arr=arr.split("")}arr=arr.slice(0).reverse();if(arr.join){arr=arr.join("")}return arr};Calc.flattened=Calc.flatten=function flatten(arr){var flattened=[],i,len,toString;toString=Object.prototype.toString;for(i=0,len=arr.length;i<len;i+=1){if(toString.call(arr[i])==="[object Array]"){flattened=flattened.concat(flatten(arr[i]))}else{flattened.push(arr[i])}}return flattened};Calc.groups=Calc.grouped=function(arr,n){var groups=[[]],remaining,i,len,lastGroup;if(typeof arr==="string"){arr=arr.split("")}if(n===UNDEFINED){n=1}else if(n===0){return[]}lastGroup=groups[groups.length-1];for(i=0,len=arr.length;i<len;i+=1){if(lastGroup.length===n){groups.push([]);lastGroup=groups[groups.length-1]}lastGroup.push(arr[i])}if(lastGroup.length!==n){remaining=n-lastGroup.length;for(i=0;i<remaining;i+=1){lastGroup.push(NULL)}}return groups};Calc.factorial=function(num){var factorial=num,i;if(num===0){factorial=1}else if(num%1===0){for(i=1;i<num;i+=1){factorial*=i}}else{factorial=NULL}return factorial};Calc.nPr=function(n,r){if(n<r){return 0}return Calc.factorial(n)/Calc.factorial(n-r)};Calc.nCr=function(n,r){if(n<r){return 0}return Calc.factorial(n)/(Calc.factorial(n-r)*Calc.factorial(r))};Calc.permuations=Calc.perms=Calc.permute=function(arr,n){var arrIndices,perms,perm;perms=[];if(n===UNDEFINED){n=arr.length}if(typeof arr==="string"){arr=arr.split("")}function filterCallback(v,k){return k}arrIndices=Calc.map(arr,filterCallback);function _permute(permIndices){var items,i,mapCallback,filterCallback;if(permIndices.length===n){mapCallback=function(v,k){return arr[v]};perm=Calc.map(permIndices,mapCallback);perms.push(perm)}else{filterCallback=function(v,k){return Calc.index(permIndices,v)===-1};items=Calc.filtered(arrIndices,filterCallback);for(i=0;i<items.length;i+=1){_permute(permIndices.concat(items[i]))}}}_permute([]);return perms};Calc.degrees=function(angle){return angle*(180/PI)};Calc.radians=function(angle){return angle*(PI/180)};Calc.radiansf=function(angle){var frac=Calc.frac(angle/PI);if(frac[0]%1!==0&&frac[0]===1){return frac[0]+"π"}frac=frac.join("/").replace(/^(-)?1$/gi,"$1π").replace(/\//gi,"π/").replace(/^(-)?1π/gi,"$1π").replace(/\/1$/gi,"").replace(/^0π/gi,"0");return frac};Calc.sin=Math.sin;Calc.cos=Math.cos;Calc.tan=Math.tan;Calc.csc=function(angle){return 1/Calc.sin(angle)};Calc.sec=function(angle){return 1/Calc.cos(angle)};Calc.cot=function(angle){return 1/Calc.tan(angle)};Calc.asin=Math.asin;Calc.acos=Math.acos;Calc.atan=Math.atan;Calc.atan2=Math.atan2;Calc.acsc=function(num){return Calc.asin(1/num)};Calc.asec=function(num){return Calc.acos(1/num)};Calc.acot=function(num){return Calc.atan(1/num)};Calc.acot2=function(a,b){return Calc.atan2(b,a)};Calc.sinh=function(angle){return(exp(angle)-exp(-angle))/2};Calc.cosh=function(angle){return(exp(angle)+exp(-angle))/2};Calc.tanh=function(angle){return(exp(angle)-exp(-angle))/(exp(angle)+exp(-angle))};Calc.csch=function(angle){return 1/Calc.sinh(angle)};Calc.sech=function(angle){return 1/Calc.cosh(angle)};Calc.coth=function(angle){return 1/Calc.tanh(angle)};Calc.asinh=function(num){return log(num+sqrt(pow(num,2)+1))};Calc.acosh=function(num){return log(num+sqrt(pow(num,2)-1))};Calc.atanh=function(num){return log((1+num)/(1-num))/2};Calc.acsch=function(num){return Calc.asinh(1/num)};Calc.asech=function(num){return Calc.acosh(1/num)};Calc.acoth=function(num){return Calc.atanh(1/num)};Calc.coterminal=function(angle){return angle-2*PI*Calc.floor(angle/(2*PI))};Calc.rect=Calc.cart=function(pt){var x,y;x=pt[0]*Calc.cos(pt[1]);y=pt[0]*Calc.sin(pt[1]);return[x,y]};Calc.polar=function(pt){var r=Calc.hypot(pt[0],pt[1]),t=Calc.atan2(pt[1],pt[0]);if(t<0){t=Calc.coterminal(t)}return[r,t]};Calc.quadrant=function(angle){var quadrant=ceil(Calc.coterminal(angle)/(2*PI)*4);if(quadrant===0){quadrant=1}return quadrant};Calc.refAngle=function(angle){return abs(Calc.nearest(angle,PI)-angle)};Calc.factors=function(arr){var common,min,factors=[1],f,i,len;if(!arr.push){arr=[arr]}else{arr=arr.slice(0)}for(i=0,len=arr.length;i<len;i+=1){if(arr[i]){arr[i]=abs(arr[i])}else{arr.splice(i,1);i-=1}}if(arr.length){min=Calc.min(arr);for(f=2;f<=min;f+=1){common=TRUE;for(i=0;i<arr.length;i+=1){if(arr[i]%f!==0){common=FALSE}}if(common){factors.push(f)}}}return factors};Calc.gcf=Calc.gcd=function(arr){var factors=Calc.factors(arr);return factors[factors.length-1]};Calc.lcm=Calc.lcd=function(arr){var prod,lcm,common,m,i,len;prod=Calc.product(arr);for(m=1;m<prod;m+=1){common=TRUE;for(i=0,len=arr.length;i<len;i+=1){if(m%arr[i]!==0){common=FALSE}}if(common){lcm=m;break}}return lcm};Calc.fib=function(n){var a,b,i,last;a=0;b=1;if(n===0){b=0}else{for(i=0;i<n-1;i+=1){last=b;b=a+b;a=last}}return b};Calc.prime=function(n){var i=0,p=0,prime,isPrime;for(i=0;p<=n;i+=1){isPrime=Calc.isPrime(i);if(isPrime){prime=i;p+=1}}return prime};Calc.fraction=Calc.frac=function(num){var epsilon=1e-12,numerator,absNum,d;for(d=1;d<5e4;d+=1){numerator=num*d;absNum=abs(numerator);if(absNum%1<epsilon||1-absNum%1<epsilon){return[round(numerator),d]}}return[num,1]};Calc.fractionf=Calc.fracf=function(num){var frac=Calc.frac(num);frac=frac.join("/").replace(/\/1$/gi,"");return frac};Calc.radical=function(num){var root,ans,factor,f,sign;sign=Calc.sign(num);num=abs(num);root=sqrt(num);ans=[1,num];if(root%1===0){ans=[root,1]}else{for(f=2;f<num;f+=1){factor=num/f;if(factor%1===0){root=sqrt(factor);if(root%1===0){ans=[root,num/factor];break}}}}ans[1]*=sign;return ans};Calc.radicalf=function(num){var rad=Calc.radical(num);rad=rad.join("√").replace(/1√/gi,"√").replace(/√\-/gi,"i√").replace(/√1$/gi,"");if(rad===""){rad="1"}return rad};Calc.commas=function(num){var parts=String(num).split(".");if(parts[0].indexOf("e")===-1){parts[0]=parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,")}return parts.join(".")};Calc.noCommas=function(str){str=str.replace(/,/gi,"");return parseFloat(str)};Calc.isEven=function(num){return num%2===0};Calc.isOdd=function(num){return abs(num)%2===1};Calc.isInteger=function(num){return num%1===0};Calc.isPrime=function(num){var factors=Calc.factors(num);return factors.length===2};Calc.isComposite=function(num){num=abs(num);return Calc.factors(num).length>2};Calc.isFactor=Calc.isFactorOf=function(factor,num){return num%factor===0};Calc.isFib=function(num){var ans,a,b;a=5*pow(num,2)+4;if(num>0){b=5*pow(num,2)-4}else{b=a}if(sqrt(a)%1===0||sqrt(b)%1===0){ans=TRUE}else{ans=FALSE}return ans};Calc.rand=Calc.random=function(a,b){if(a===UNDEFINED&&b===UNDEFINED){a=0;b=1}else if(b===UNDEFINED){b=a;a=0}if(b.length){return floor(b.length*random())}return a+(b-a)*random()};Calc.randInt=function(a,b){return round(Calc.rand(a,b))};Calc.randChoices=function(arr,n){return Calc.scramble(arr).slice(0,n||1)};Calc.randChoice=Calc.choice=function(arr){return arr[Calc.random(arr)]};Calc.scrambled=Calc.scramble=function(arr){var item,i;arr=arr.slice(0);for(i=0;i<arr.length;i+=1){item=arr[i];arr.splice(i,1);arr.splice(Calc.random(arr),0,item)}return arr};Calc.base=function(num,base){return num.toString(base)};Calc.decimal=Calc.dec=function(num,base){return parseInt(num,base)};Calc.binary=Calc.bin=function(num){return num.toString(2)};Calc.octal=Calc.oct=function(num){return num.toString(8)};Calc.hex=function(num){return num.toString(16)};Calc.not=function(bool){return!bool};Calc.and=function(bool1,bool2){return!!bool1&&!!bool2};Calc.or=function(bool1,bool2){return!!bool1||!!bool2};Calc.xor=function(bool1,bool2){return(!!bool1||!!bool2)&&bool1!==bool2};Calc.nand=function(bool1,bool2){return!(!!bool1&&!!bool2)};Calc.nor=function(bool1,bool2){return!(!!bool1||!!bool2)};function Matrix(m1){if(m1&&m1.constructor===Matrix){m1=m1.matrix.slice(0)}else if(m1===UNDEFINED){m1=[[1]]}this.matrix=m1}Calc.matrix=function(m1){return new Matrix(m1)};matrix=Matrix.prototype;function _row(m1,r){return m1[r]}function _col(m1,c){var arr=[],r,len;for(r=0,len=m1.length;r<len;r+=1){arr.push(m1[r][c])}return arr}function _rows(m1){return m1.length}function _cols(m1){if(m1.length===0){return 0}return m1[0].length}function _crossout(m1,pt){var r,c,nrows,ncols;m1=m1.slice(0);m1.splice(pt[0],1);for(r=0,nrows=m1.length;r<nrows;r+=1){m1[r]=m1[r].slice(0);for(c=0,ncols=m1[r].length;c<ncols;c+=1){if(c===pt[1]){m1[r].splice(c,1)}}}return m1}function _det(m1){var sign=1,top=m1[0],cols=_cols(m1),sub,ans=0,c;for(c=0;c<cols;c+=1){sub=_crossout(m1.slice(0),[0,c]);ans+=top[c]*sign*Calc.matrix(sub).det();sign*=-1}return ans}matrix.scale=function(scalar){var m1=this.matrix.slice(0),r,c,nrows,ncols;for(r=0,nrows=m1.length;r<nrows;r+=1){for(c=0,ncols=m1[r].length;c<ncols;c+=1){m1[r][c]*=scalar}}return Calc.matrix(m1)};matrix.row=function(r){return _row(this.matrix,r)};matrix.col=function(c){return _col(this.matrix,c)};matrix.value=function(index){var m1=this.matrix,cols=_cols(m1),row=ceil(index/cols)-1,col=index%cols;return m1[row]?m1[row][col]:UNDEFINED};matrix.index=function(value){var m1=this.matrix,rows=_rows(m1),cols=_cols(m1),r,c;for(r=0;r<rows;r+=1){for(c=0;c<cols;c+=1){if(m1[r][c]===value){return r*cols+c}}}return NULL};matrix.nrows=matrix.rows=function(){return _rows(this.matrix)};matrix.ncols=matrix.cols=function(){return _cols(this.matrix)};matrix.nvalues=matrix.values=function(){var m1=this.matrix;return _rows(m1)*_cols(m1)};matrix.add=function(m2){var m1=this.matrix,r,c,nrows,ncols,ans=[];m2=Calc.matrix(m2).matrix;if(m1.length!==m2.length||m1[0].length!==m2[0].length){return NULL}for(r=0,nrows=m1.length;r<nrows;r+=1){ans[r]=[];for(c=0,ncols=m1[r].length;c<ncols;c+=1){ans[r][c]=m1[r][c]+m2[r][c]}}return Calc.matrix(ans)};matrix.subtract=function(m2){return this.add(Calc.matrix(m2).scale(-1))};matrix.multiply=function(m2){m2=Calc.matrix(m2).matrix;var m1=this.matrix,r,c,rr,n,row,col,rows=m1.length,cols=m2[0].length,productRows,ans=[];if(m1[0].length!==m2.length){return NULL}for(r=0;r<rows;r+=1){ans[r]=[];for(c=0;c<cols;c+=1){n=0;row=_row(m1,r);col=_col(m2,c);for(rr=0,productRows=row.length;rr<productRows;rr+=1){n+=row[rr]*col[rr]}ans[r][c]=n}}return Calc.matrix(ans)};matrix.det=matrix.determinant=function(){var m1=this.matrix,rows=_rows(m1),cols=_cols(m1),det;if(rows===1&&cols===1){det=m1[0][0]}else if(rows>1&&cols>1){det=_det(m1)}else{det=NULL}return det};matrix.transpose=matrix.reflect=function(){var m1=this.matrix,rows=_rows(m1),cols=_cols(m1),reflected=[],r,c;for(c=0;c<cols;c+=1){reflected[c]=[];for(r=0;r<rows;r+=1){reflected[c][r]=m1[r][c]}}return Calc.matrix(reflected)};matrix.cofactors=function(){var m1=this.matrix,rows=_rows(m1),cols=_cols(m1),factors=[],rsign=1,csign,sub,r,c;m1=m1.slice(0);for(r=0;r<rows;r+=1){csign=rsign;factors[r]=[];for(c=0;c<cols;c+=1){sub=_crossout(m1,[r,c]);factors[r].push(Calc.matrix(sub).det()*csign);csign*=-1}rsign*=-1}return Calc.matrix(factors)};matrix.adjugate=matrix.adj=function(){return this.transpose().cofactors()};matrix.inverse=matrix.inv=function(){var inst=this,m1=inst.matrix,rows=_rows(m1),cols=_cols(m1),det=inst.det(),inv;if(rows===1&&cols===1){inv=[[1/m1[0][0]]]}else if(rows>1&&cols>1){if(det){inv=inst.adjugate().scale(1/det)}else{return NULL}}return Calc.matrix(inv)};matrix.identity=matrix.iden=function(){var inst=this,m1=inst.matrix,cols=_cols(m1),iden=[],r,c,d=0,value;for(r=0;r<cols;r+=1){iden[r]=[];for(c=0;c<cols;c+=1){if(c===d){value=1}else{value=0}iden[r][c]=value}d+=1}return Calc.matrix(iden)};function Vector(v1){if(v1&&v1.constructor===Vector){v1=v1.vector}v1=v1||[0,0,0];v1=v1.slice(0);v1[2]=v1[2]||0;this.vector=v1}Calc.vector=function(v1){return new Vector(v1)};vector=Vector.prototype;vector.mag=function(){var v1=this.vector;return sqrt(pow(v1[0],2)+pow(v1[1],2)+pow(v1[2],2))};vector.angle=function(){return Calc.polar(this.vector)[1]};vector.scale=function(scalar){var v1=this.vector.slice(0);v1[0]*=scalar;v1[1]*=scalar;v1[2]*=scalar;return Calc.vector(v1)};vector.add=function(v2){var v1=this.vector;v2=Calc.vector(v2).vector;return Calc.vector([v1[0]+v2[0],v1[1]+v2[1],v1[2]+v2[2]])};vector.subtract=function(v2){return this.add(Calc.vector(v2).scale(-1))};vector.dot=function(v2){var v1=this.vector;v2=Calc.vector(v2).vector;return v1[0]*v2[0]+v1[1]*v2[1]};vector.cross=function(v2){var v1=this.vector;v2=Calc.vector(v2).vector;if(v1[2]===0||v2[2]===0){return NULL}return Calc.vector([v1[1]*v2[2]-v1[2]*v2[1],v1[2]*v2[0]-v1[0]*v2[2],v1[0]*v2[1]-v1[1]*v2[0]])};function Set(s1){if(s1&&s1.constructor===Set){s1=s1.set.slice(0)}else if(s1===UNDEFINED){s1=[]}this.set=Calc.unique(s1.slice(0))}Calc.set=function(s1){return new Set(s1)};set=Set.prototype;set.union=function(s2){var s1=this.set;s2=Calc.set(s2).set;return Calc.set(s1.concat(s2))};set.intersection=set.intersect=function(s2){var s1=this.set;s2=Calc.set(s2).set;return Calc.set(Calc.filtered(s1,function(v){return Calc.index(s2,v)!==-1}))};set.difference=set.diff=function(s2){var s1=this.set;s2=Calc.set(s2).set;return Calc.set(Calc.filtered(s1,function(v){return Calc.index(s2,v)===-1}))};set.symDiff=function(s2){var s1=this;s2=Calc.set(s2);return s1.union(s2).diff(s1.intersection(s2))};set.equals=function(s2){var s1=this.set,i;s2=Calc.set(s2).set;if(s1.length===s2.length){for(i=0;i<s1.length;i+=1){if(Calc.index(s2,s1[i])===-1){return FALSE}}return TRUE}return FALSE}})(self,Math,parseFloat,parseInt,String,true,false,null);